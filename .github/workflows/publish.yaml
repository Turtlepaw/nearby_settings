name: Publish release

on:
  workflow_dispatch:

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Calculate version
        id: version
        run: |
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          ver=${latest#v}
          IFS='.' read -r major minor patch <<< "$ver"
          newPatch=$((patch + 1))
          newVersion="$major.$minor.$newPatch"
          echo "Calculated new version: $newVersion"
          echo "version=$newVersion" >> $GITHUB_OUTPUT

  build-mobile:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.29.3"
          channel: "stable"
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.4.2"
          bundler-cache: true
          # setup ruby should do this
      # - name: Setup Fastlane
      #   run: |
      #     cd mobile/android
      #     gem install bundler
      #     bundle lock --add-platform x86_64-linux
      #     bundle install
      - name: Setup Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-mobile-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-mobile-
      - name: Setup Flutter Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache 
            mobile/.dart_tool
            mobile/build
          key: ${{ runner.os }}-flutter-${{ hashFiles('mobile/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      - name: Create keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > mobile/android/app/key.jks
      - name: Create key.properties
        run: |
          cat << EOF > key.properties
          storePassword=${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=key.jks
          EOF
          mv key.properties mobile/android/
      - name: Setup Play Store credentials
        run: |
          echo "${{ secrets.PLAY_STORE_JSON_KEY }}" > mobile/android/play-store-credentials.json
      - name: Build and Deploy
        run: |
          cd mobile
          flutter pub get
          flutter build apk --release
          flutter build appbundle --release
          cd android
          bundle exec fastlane deploy
      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: mobile-aab
          path: mobile/build/app/outputs/bundle/release/app-release.aab
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: mobile-apk
          path: mobile/build/app/outputs/flutter-apk/app-release.apk

  build-example:
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
      - name: Setup Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build APK
        run: |
          chmod +x ./gradlew
          ./gradlew :example:assembleRelease
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: example-apk
          path: example/build/outputs/apk/release/example-release-unsigned.apk

  release:
    needs: [version, build-mobile, build-example]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download mobile APK
        uses: actions/download-artifact@v4
        with:
          name: mobile-apk
          path: mobile-artifact
      - name: Download example APK
        uses: actions/download-artifact@v4
        with:
          name: example-apk
          path: example-artifact
      - name: Rename APKs
        run: |
          mv mobile-artifact/app-release.apk mobile.apk
          mv example-artifact/example-release-unsigned.apk example.apk
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            mobile.apk
            example.apk
          body_path: changelog.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Release ${{ needs.version.outputs.version }}
          tag_name: v${{ needs.version.outputs.version }}
